<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建HEXO博客的踩坑之路（一）</title>
      <link href="/2020/03/20/%E6%90%AD%E5%BB%BAHEXO%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%B8%A9%E5%9D%91%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89%E6%90%AD%E5%BB%BA%E7%AF%87/"/>
      <url>/2020/03/20/%E6%90%AD%E5%BB%BAHEXO%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%B8%A9%E5%9D%91%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89%E6%90%AD%E5%BB%BA%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1>搭建HEXO博客的踩坑之路（一）✈️</h1><hr><p><strong>写在前面✍️</strong></p><p>出于日后毕业找工作面试会有加分项，所以花了两天时间搭建了这个博客，因为我是小白所以搭建过程中四次删掉已经搭好的博客，以及踩到灰常多的坑，我来梳理一下搭建的整体过程，以及踩过的坑，避免伙伴们也遇到相同的问题。😃</p><p>我并没有选择其他一些更符合我审美的博客框架，而是选择了HEXO这个博客框架（对，因为它很火，能搜到的问题解决方案多，不是我菜）✌️</p><p>Okey~ Here we go~🏃</p><hr><h2 id="Hexo简介">Hexo简介</h2><blockquote><p>🔗<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>是一款基于Node.js的静态博客框架，利用Markdown渲染速度超快且需要的依赖比较少</p><p>部署简单，插件和可扩展性强，🔗<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题库</a>很大</p></blockquote><p>ps：因为是静态博客所以没有后台，整个文章的上传和页面布局配置都是通过命令行和Markdown（所以还不会的小朋友要先去学习一下Markdown）</p><h2 id="初步搭建总览">初步搭建总览</h2><ul><li>安装Git：因为要通过工具对我们的项目部署到Github或者其他平台上，所以Git必不可少</li><li>安装Node.js</li><li>安装HEXO</li><li>创建Github或者码云的个人仓库</li><li>生成SSH添加至Github</li><li>将hexo部署到Github或其他平台</li></ul><h2 id="1-安装Git">1.安装Git</h2><ul><li><p>Windows用户可以直接到🔗<a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git官网</a>下载</p></li><li><p>Linux用户只需要一行代码：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-core //Ubuntu，Debian</span><br><span class="line"></span><br><span class="line">sudo yum install git-core //Fedora，RedHat，CentOS</span><br></pre></td></tr></table></figure><ul><li>Mac用户同理</li></ul><p>安装完成后用<code>git --version</code>可以查看版本</p><p><img src="/" alt="image-20200320174017210" class="lazyload" data-src="image-20200320174017210.png"></p><h2 id="2-安装node-js和里面的npm工具">2.安装node.js和里面的npm工具</h2><ul><li><p>Windows用户直接到🔗<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>下载，选择LTS版本即可</p></li><li><p>Linux（DEB/RPM-based）：从 <a href="https://github.com/nodesource/distributions" target="_blank" rel="noopener">NodeSource</a> 安装</p></li><li><p>Mac用户同理</p></li></ul><p>安装完成后用<code>node -v</code>和<code>npm -v</code>检查是否安装成功</p><img src="/" alt="image-20200320173927700"  / class="lazyload" data-src="image-20200320173927700.png"><h2 id="3-安装HEXO">3.安装HEXO</h2><p>git和nodejs都安装好了之后，就可以开始安装hexo了，可以现在自己的磁盘里创建一个blog文件夹</p><blockquote><p>坑一：接下来的命令会直接将hexo安装到你的blog文件夹下，但是日后如果安装一些主题的时候，主题会直接修改你的blog文件夹中的配置文件，一旦被你玩崩了只能把blog文件夹干掉重新来过了，所以此处建议myblog / 主题名_blog 的目录进行设置，根据主题建立文件夹还有一个好处就是，以后想要切换主题就可以把另一个主题的blog直接部署就行</p></blockquote><img src="/" alt="image-20200320172858601" style="zoom: 80%;" / class="lazyload" data-src="image-20200320172858601.png"><blockquote><p>💡因为我之前在虚拟机上玩Linux的时候经常玩崩，因为没有快照备份，所以重装了七八回，所以我就养成了随手备份的好习惯</p></blockquote><p>然后通过cmd的cd到这个文件夹下（或者直接进入文件夹然后右键git bash就能直接打开）</p><p>接下来就可以跟着hexo主页的五条命令来进行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">//安装基础框架，养成安装完就看版本的好习惯  hexo -v </span><br><span class="line">$ hexo inti blog</span><br><span class="line">//初始化你的blog，可能比较慢，这条命令执行完，你的blog目录里会出现一大堆文件，就说明安装成功了</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">//进入你的blog目录</span><br><span class="line"><span class="variable">$npm</span> install</span><br><span class="line">//安装所需要的组件</span><br><span class="line"><span class="variable">$hexo</span> server</span><br><span class="line">//启动本地服务</span><br></pre></td></tr></table></figure><img src="/" alt="image-20200320174428620" style="zoom:80%;" / class="lazyload" data-src="image-20200320174428620.png"><p>你就可以直接在浏览器输入<code>http://localhost:4000</code>就可以看到自己的博客界面了</p><img src="/" alt="image-20200320175004988" style="zoom:80%;" / class="lazyload" data-src="image-20200320175004988.png"><h2 id="4-创建Github的个人仓库">4.创建Github的个人仓库</h2><blockquote><p>首先创建Github账户，不过我觉得既然都自建博客了，如果还没有一个github账号可就太不应该了😏</p><p>注册完成后，点右上角的➕号，New repository</p></blockquote><p><img src="/" alt="image-20200320180057317" class="lazyload" data-src="image-20200320180057317.png"></p><blockquote><p>创建仓库，填写你自己的域名</p></blockquote><img src="/" alt="image-20200320180650400" style="zoom:80%;" / class="lazyload" data-src="image-20200320180650400.png"><h2 id="5-生成SSH添加到github">5.生成SSH添加到github</h2><p>回到你的git bash中，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"yourname"</span> </span><br><span class="line">git config --global user.email <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure><p>这里的yourname是你的github的名字，youremail是你的注册邮箱</p><p>检查是否正确</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200320181141935" class="lazyload" data-src="image-20200320181141935.png"></p><p>创建SSH（如果之前用过git可以去C:\Users\ASUS\.ssh目录下看看，这是我的路径，可能有差异）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygent -t rsa -C <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure><p>一路回车</p><p>完事之后会告诉你已经生成了.ssh文件，进入会有两个文件</p><p><img src="/" alt="image-20200320182904152" class="lazyload" data-src="image-20200320182904152.png"></p><p>在Github的setting中点击SSH and GPG keys把你的id_ras.pub里面的信息复制进去</p><img src="/" alt="image-20200320183227721" style="zoom:80%;" / class="lazyload" data-src="image-20200320183227721.png"><p>查看是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.co</span><br></pre></td></tr></table></figure><img src="/" alt="image-20200320183441536" style="zoom:80%;" / class="lazyload" data-src="image-20200320183441536.png"><blockquote><p>来解释一下为什么配置这个，因为你提交代码肯定要拥有你的github权限才可以，但是直接用用户名密码太傻屌，最为最大的IT男（gayhub）交流平台怎么能干这种事呢，所以我们是用sshkey来解决本地和服务器的连接问题</p></blockquote><h2 id="6-将hexo部署到Gayhub上（呸，Github）">6.将hexo部署到Gayhub上（呸，Github）</h2><blockquote><p>终于到了最后一步🤙</p><p>这一步就是将hexo和github进行关联，把hexo生成的文章部署到Github上，打开你博客根目录下的<code>_config.yml</code>,往最下边翻，修改一下</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/YourgithubName/YourgithubNmae.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">maste</span></span><br></pre></td></tr></table></figure><blockquote><p>来，让我康康是谁直接复制上去连自己的仓库名都不改🙋‍♂</p></blockquote><p>配置完毕</p><p>再来安装一个插件deploy-git，也就是部署命令，这样你才能用命令部署到Github上</p><p><strong>此处注意：一定要使用git bash不能用cmd，否则会报错</strong></p><p>最后，真的最后一步了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deloy</span><br></pre></td></tr></table></figure><p>这三个命令可以简写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><blockquote><p>这里用到了hexo的一些命令，之后我会专门出一篇文章来讲一讲hexo的命令（可能吧，也许发懒会鸽🕊）</p><p>先解释一下：<code>hexo clean</code> 清除缓存会删除你博客根目录下的public文件和某json文件、</p><p><code>hexo generate</code> 会对你的配置或者新写的文章进行静态配置，生成静态网页，就在你的public文件夹下，所以如果进行了配置，一定要记得clean一下，否则会出很多问题</p><p>一般在<code>hexo d</code>之前会先用<code>hexo s</code>来进行本地查看，就是那个4000端口号的，如果没有问题走下一步</p><p><code>hexo d</code> 就是进行最后的一步，部署到你的github上</p><p>如果是第一次会让你输入你的github用户名和密码</p><p>如果没有报错，恭喜你，已经部署成功了</p><p>你已经可以在<code>https://yourname.github.io</code>这个网站看到你自己的博客了</p></blockquote><h2 id="（插）7-将你的hexo部署到gitee上">（插）7.将你的hexo部署到gitee上</h2><blockquote><p>众所周知，Github这个网站有一个特点，总有那么几天就和便秘一样，页面响应就是给你流转不回来（如果长期挂梯子的朋友忽视此条），所以，我将自己的博客挂在了<a href="https://gitee.com/" target="_blank" rel="noopener">码云</a>上</p><p>码云算是中国的github，但是通常情况下，是作为工具云来使用的（笑）</p></blockquote><p>第一步：同样创建仓库</p><p><img src="/" alt="image-20200320191056041" class="lazyload" data-src="image-20200320191056041.png"></p><p>创建成功后需要修改一下博客根目录下的<code>_config.yml</code></p><p>修改你的repo从下图位置进行复制，<strong>注意：repo冒号后面有空格，否则不能识别</strong></p><p><img src="/" alt="image-20200320191525387" class="lazyload" data-src="image-20200320191525387.png"></p><blockquote><p>安装自动部署发布工具<code>npm install hexo-deployer-git --save</code>如果上面已经安装过了，请忽略</p></blockquote><p>Gittee Pages设置</p><img src="/" alt="image-20200320192022685" style="zoom:80%;" / class="lazyload" data-src="image-20200320192022685.png"><p>然后进行如图设置</p><p><img src="/" alt="image-20200320192122611" class="lazyload" data-src="image-20200320192122611.png"></p><p>点击更新，就会出现的博客连接</p><p>如果博客样式不对，需要在<code>_config.yml</code>中配置博客地址和路径</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://yourname.gitee.io/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><p>然后执行命令<code>hexo cl $$ hexo g $$ hexo d</code>清理，生成，部署，一气呵成</p><p>但是！</p><p>gitee的最终部署只靠<code>hexo d</code>还不够，需要再次打开你的Gitee Pages页面手动更新</p><p>你想问什么这么麻烦？问就是穷，如果你是氪金大佬可以买他们VIP，99软妹币一年，如果这样的话，就相当于在他们这里买了个服务器，你将获得</p><blockquote><p>√ 支持自定义域名</p><p>√ 支持HTTPS</p><p>√ 支持推送后自动部署</p></blockquote><p>我并不是给他们打广告，而是……</p><p>如果氪金，请带上我🤞</p><hr><p>​  <center>-本文完-</center></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 踩坑之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO添加各种组件（长期更新）</title>
      <link href="/2020/03/20/HEXO%E6%B7%BB%E5%8A%A0%E5%90%84%E7%A7%8D%E7%BB%84%E4%BB%B6/"/>
      <url>/2020/03/20/HEXO%E6%B7%BB%E5%8A%A0%E5%90%84%E7%A7%8D%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1>HEXO添加各种组件✈️</h1><hr><h2 id="👉添加图片插件">👉添加图片插件</h2><ol><li>安装插件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><ol start="2"><li>在<code>_config.yml</code>配置文件中，修改为 post_asset_folder: true，配置开启之后，在<code>hexo new “一篇文章”</code>之后会自动在_posts目录下创建一个同名的文件夹放置图片</li></ol><p><img src="/" alt="image-20200320210926860" class="lazyload" data-src="image-20200320210926860.png"></p><p>然后.md里的图片路径就可以写成<code>![图片名](直接写文件夹中图片名)</code>这里/不用加</p><ol start="3"><li>重新清理生成一下就没问题了</li></ol><blockquote><p>当然也可以用CDN来储存图片，这样速度会相对来说快一点</p></blockquote><h2 id="👉添加emoji">👉添加emoji</h2><p>​因为平常用Typora写Markdown，Typora里面内置了emoji，所以用得比较多，没了emoji会很难受，所以研究了一下怎么在文章内添加emoji😏</p><p>​首先我们知道HEXO的文章是通过Markdown进行渲染的，所以渲染引擎很重要，so HEXO默认采用的是<code>hexo-renderer-marked</code>这个渲染器，然鹅它并不支持插件，所以我们得替换掉它，我们采用<code>hexo-renderer-markdown-it</code>这个渲染引擎，它支持插件配置，所以我们可以使用<code>markwon-it-emoji</code>插件来支持emoji</p><blockquote><p>相关链接：</p><ul><li><a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a></li><li><a href="https://github.com/celsomiranda/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a></li><li><a href="https://github.com/markdown-it/markdown-it-emoji" target="_blank" rel="noopener">markwon-it-emoji</a></li></ul></blockquote><ol><li>首先卸载HEXO默认的Markdown渲染引擎</li><li>安装新的渲染引擎</li><li>安装新的渲染引擎上的emoji插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm un hexo-renderer-marked --save</span><br><span class="line">$ npm i hexo-renderer-markdown-it --save</span><br><span class="line">$ npm install markdown-it-emoji --save</span><br></pre></td></tr></table></figure><ol start="4"><li>配置博客根目录<code>_config.yml</code>，在末尾添加如下内容</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">'“”‘’'</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-emoji</span>  <span class="comment">## add emoji</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">'v'</span></span><br><span class="line">    <span class="comment"># If `true`, creates an anchor tag with a permalink besides the heading.</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">false</span>  </span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="comment"># The symbol used to make the permalink</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">¶</span></span><br></pre></td></tr></table></figure><p>上面所有的配置选项的详细说明请自行到<a href="https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki/Advanced-Configuration" target="_blank" rel="noopener">Advanced Configuration</a>中查看</p><p><strong>使用方法：</strong></p><ol><li>在 <a href="https://emoji.codes/" target="_blank" rel="noopener">Emoji</a> 中找到你想要的表情，然后点击即可复制。或者你也用Typora，直接用冒号加英文字母就可以直接显示出来(疯狂安利Typora！！😏)</li></ol><p><img src="/" alt="image-20200320214223316" class="lazyload" data-src="image-20200320214223316.png"></p><ol start="2"><li>在别的编辑器里想发一个😄直接输入对应的编码<code>:smile:</code>即可</li><li>这里的emoji是Unicode编码，如果感觉不好看，可以参考下面相关链接</li></ol><hr><p>相关链接：</p><ul><li><a href="https://segmentfault.com/a/1190000009478837" target="_blank" rel="noopener">搭建Hexo博客进阶篇–API和一些小部件（四）</a></li></ul><hr><center>-本文完-</center>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 踩坑之路 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
